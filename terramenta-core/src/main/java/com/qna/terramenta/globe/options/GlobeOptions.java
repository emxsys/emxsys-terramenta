/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qna.terramenta.globe.options;

import gov.nasa.worldwind.avlist.AVKey;
import java.util.prefs.Preferences;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.util.NbPreferences;

/**
 * 
 * @author heidtmare
 */
public final class GlobeOptions extends javax.swing.JPanel {

    private Preferences pref = NbPreferences.forModule(GlobeOptions.class);

    /**
     * 
     */
    public GlobeOptions() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        statusBarButtonGroup = new javax.swing.ButtonGroup();
        displayModeButtonGroup = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        viewPanel = new javax.swing.JPanel();
        bStereoNone = new javax.swing.JRadioButton();
        bStereoRedBlue = new javax.swing.JRadioButton();
        bStereoDevice = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        focusAngleSlider = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        worldwindConfigTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        statusBarPanel = new javax.swing.JPanel();
        statusBarStandardRadioButton = new javax.swing.JRadioButton();
        statusBarUtmRadioButton = new javax.swing.JRadioButton();
        statusBarMgrsRadioButton = new javax.swing.JRadioButton();
        flatEarthPanel = new javax.swing.JPanel();
        useFlatEarthCheckBox = new javax.swing.JCheckBox();
        flatProjectionComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        quickTipsCheckBox = new javax.swing.JCheckBox();

        jFileChooser1.setFileFilter(new FileNameExtensionFilter("xml files", "xml"));

        viewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.viewPanel.border.title"))); // NOI18N
        viewPanel.setLayout(new javax.swing.BoxLayout(viewPanel, javax.swing.BoxLayout.LINE_AXIS));

        bStereoNone.setActionCommand(AVKey.STEREO_MODE_NONE);
        displayModeButtonGroup.add(bStereoNone);
        org.openide.awt.Mnemonics.setLocalizedText(bStereoNone, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.bStereoNone.text")); // NOI18N
        viewPanel.add(bStereoNone);

        bStereoRedBlue.setActionCommand(AVKey.STEREO_MODE_RED_BLUE);
        displayModeButtonGroup.add(bStereoRedBlue);
        org.openide.awt.Mnemonics.setLocalizedText(bStereoRedBlue, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.bStereoRedBlue.text")); // NOI18N
        viewPanel.add(bStereoRedBlue);

        bStereoDevice.setActionCommand(AVKey.STEREO_MODE_DEVICE);
        displayModeButtonGroup.add(bStereoDevice);
        org.openide.awt.Mnemonics.setLocalizedText(bStereoDevice, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.bStereoDevice.text")); // NOI18N
        viewPanel.add(bStereoDevice);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.jLabel2.text")); // NOI18N
        viewPanel.add(jLabel2);

        focusAngleSlider.setMajorTickSpacing(10);
        focusAngleSlider.setMinorTickSpacing(1);
        focusAngleSlider.setPaintTicks(true);
        focusAngleSlider.setSnapToTicks(true);
        focusAngleSlider.setToolTipText(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.focusAngleSlider.toolTipText")); // NOI18N
        viewPanel.add(focusAngleSlider);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.jPanel4.border.title"))); // NOI18N
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);

        worldwindConfigTextField.setText(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.worldwindConfigTextField.text")); // NOI18N
        worldwindConfigTextField.setMaximumSize(new java.awt.Dimension(2147483647, 23));
        worldwindConfigTextField.setMinimumSize(new java.awt.Dimension(6, 23));
        worldwindConfigTextField.setPreferredSize(new java.awt.Dimension(59, 23));
        jPanel4.add(worldwindConfigTextField);

        jLabel1.setForeground(java.awt.Color.red);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.jLabel1.text")); // NOI18N
        jPanel4.add(jLabel1);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        statusBarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarPanel.border.title"))); // NOI18N
        statusBarPanel.setLayout(new javax.swing.BoxLayout(statusBarPanel, javax.swing.BoxLayout.LINE_AXIS));

        statusBarButtonGroup.add(statusBarStandardRadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(statusBarStandardRadioButton, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarStandardRadioButton.text")); // NOI18N
        statusBarStandardRadioButton.setActionCommand(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarStandardRadioButton.actionCommand")); // NOI18N
        statusBarPanel.add(statusBarStandardRadioButton);

        statusBarButtonGroup.add(statusBarUtmRadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(statusBarUtmRadioButton, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarUtmRadioButton.text")); // NOI18N
        statusBarUtmRadioButton.setActionCommand(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarUtmRadioButton.actionCommand")); // NOI18N
        statusBarPanel.add(statusBarUtmRadioButton);

        statusBarButtonGroup.add(statusBarMgrsRadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(statusBarMgrsRadioButton, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarMgrsRadioButton.text")); // NOI18N
        statusBarMgrsRadioButton.setActionCommand(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.statusBarMgrsRadioButton.actionCommand")); // NOI18N
        statusBarPanel.add(statusBarMgrsRadioButton);

        flatEarthPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.flatEarthPanel.border.title"))); // NOI18N
        flatEarthPanel.setLayout(new javax.swing.BoxLayout(flatEarthPanel, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(useFlatEarthCheckBox, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.useFlatEarthCheckBox.text")); // NOI18N
        flatEarthPanel.add(useFlatEarthCheckBox);

        flatProjectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mercator", "Lat Lon", "Sinusoidal", "Modified Sinusoidal" }));
        flatProjectionComboBox.setLightWeightPopupEnabled(false);
        flatProjectionComboBox.setMaximumSize(new java.awt.Dimension(32767, 23));
        flatProjectionComboBox.setMinimumSize(new java.awt.Dimension(50, 23));
        flatProjectionComboBox.setPreferredSize(new java.awt.Dimension(50, 23));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useFlatEarthCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), flatProjectionComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        flatEarthPanel.add(flatProjectionComboBox);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(quickTipsCheckBox, org.openide.util.NbBundle.getMessage(GlobeOptions.class, "GlobeOptions.quickTipsCheckBox.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(quickTipsCheckBox)
                .addContainerGap(352, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quickTipsCheckBox)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(statusBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flatEarthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 255, Short.MAX_VALUE))
                    .addComponent(viewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 473, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatEarthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (JFileChooser.APPROVE_OPTION == jFileChooser1.showOpenDialog(this)) {
            worldwindConfigTextField.setText(jFileChooser1.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * 
     */
    public void load() {
        //Flat Earth
        boolean flat = Boolean.parseBoolean(pref.get("options.globe.isFlat", "false"));
        useFlatEarthCheckBox.setSelected(flat);
        flatProjectionComboBox.setSelectedItem(pref.get("options.globe.flatProjection", "Lat Lon"));

        //View
        String dm = pref.get("options.globe.displayMode", AVKey.STEREO_MODE_NONE);
        ButtonModel dmmodel;
        if (dm.equalsIgnoreCase(AVKey.STEREO_MODE_RED_BLUE)) {
            dmmodel = bStereoRedBlue.getModel();
        } else if (dm.equalsIgnoreCase(AVKey.STEREO_MODE_DEVICE)) {
            dmmodel = bStereoDevice.getModel();
        } else {
            dmmodel = bStereoNone.getModel();
        }
        displayModeButtonGroup.setSelected(dmmodel, true);
        focusAngleSlider.setValue(Integer.parseInt(pref.get("options.globe.focusAngle", "0")));

        //Status Bar
        ButtonModel model = statusBarStandardRadioButton.getModel();
        String sb = pref.get("options.globe.statusBar", "STANDARD");
        if (sb.equalsIgnoreCase("UTM")) {
            model = statusBarUtmRadioButton.getModel();
        } else if (sb.equalsIgnoreCase("MGRS")) {
            model = statusBarMgrsRadioButton.getModel();
        }
        statusBarButtonGroup.setSelected(model, true);

        //WorldWind Config
        worldwindConfigTextField.setText(pref.get("options.globe.worldwindConfig", "worldwind/worldwind.xml"));

        //ToolTips
        quickTipsCheckBox.setSelected(Boolean.parseBoolean(pref.get("options.globe.quickTips", "true")));
    }

    /**
     * 
     */
    public void store() {
        //Flat Earth
        pref.put("options.globe.isFlat", String.valueOf(useFlatEarthCheckBox.isSelected()));
        pref.put("options.globe.flatProjection", flatProjectionComboBox.getSelectedItem().toString());

        //View
        pref.put("options.globe.displayMode", displayModeButtonGroup.getSelection().getActionCommand());
        pref.put("options.globe.focusAngle", String.valueOf(focusAngleSlider.getValue()));

        //Status Bar
        pref.put("options.globe.statusBar", statusBarButtonGroup.getSelection().getActionCommand());

        //WorldWind Config
        String val = worldwindConfigTextField.getText();
        if (val.isEmpty()) {
            val = "worldwind/worldwind.xml";
        }
        pref.put("options.globe.worldwindConfig", val);

        //ToolTips
        pref.put("options.globe.quickTips", String.valueOf(quickTipsCheckBox.isSelected()));
    }

    /**
     * 
     * @return
     */
    public boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bStereoDevice;
    private javax.swing.JRadioButton bStereoNone;
    private javax.swing.JRadioButton bStereoRedBlue;
    private javax.swing.ButtonGroup displayModeButtonGroup;
    private javax.swing.JPanel flatEarthPanel;
    private javax.swing.JComboBox flatProjectionComboBox;
    private javax.swing.JSlider focusAngleSlider;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox quickTipsCheckBox;
    private javax.swing.ButtonGroup statusBarButtonGroup;
    private javax.swing.JRadioButton statusBarMgrsRadioButton;
    private javax.swing.JPanel statusBarPanel;
    private javax.swing.JRadioButton statusBarStandardRadioButton;
    private javax.swing.JRadioButton statusBarUtmRadioButton;
    private javax.swing.JCheckBox useFlatEarthCheckBox;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JTextField worldwindConfigTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
